<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linked List on Aiur · Zellux 的博客</title>
    <link>https://blog.yxwang.me/tags/linked-list/</link>
    <description>Recent content in Linked List on Aiur · Zellux 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 08 Sep 2008 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.yxwang.me/tags/linked-list/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>带环链表求环的起点</title>
      <link>https://blog.yxwang.me/2008/09/find-head-in-circular-linked-list/</link>
      <pubDate>Mon, 08 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yxwang.me/2008/09/find-head-in-circular-linked-list/</guid>
      <description>很经典的问题了，求环的长度可以用两个步长分别为1和2的指针遍历链表，直到两者相遇。相遇后把其中指针重新设定为起始点，让两个指针以步长1再走一遍链表，相遇点就是环的起始点。
证明也很简单，注意第一次相遇时
慢指针走过的路程S1 = 非环部分长度 + 弧A长
快指针走过的路程S2 = 非环部分长度 + n * 环长 + 弧A长
S1 * 2 = S2，可得非环部分长度 = n * 环长 - 弧A长
指针A回到起始点后，走过一个非环部分长度，指针B走过了相等的长度，也就是n * 环长 - 弧A长，正好回到环的开头。</description>
    </item>
    
  </channel>
</rss>